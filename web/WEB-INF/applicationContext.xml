<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

 	<bean id="dataSource"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource" destroy-method="getCatalog">

		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/gestion_contact"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="connection.pool_size">2</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>

                <!--Second level cache-->
                <prop key="cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>
                <prop key="hibernate.generate_statistics">false</prop>
			</props>
		</property>

		<property name="mappingResources">
			<list>
				<value>domain/Address.hbm.xml</value>
				<value>domain/Contact.hbm.xml</value>
				<value>domain/ContactGroup.hbm.xml</value>
				<value>domain/PhoneNumber.hbm.xml</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- DAOS -->
	<bean id="groupDAO" class="dao.GroupDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="contactDAO" class="dao.ContactDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- SERVICES -->
	<bean id="contactService" class="service.ContactServiceImpl">
		<property name="contactDAO" ref="contactDAO"/>
	</bean>

	<bean id="groupService" class="service.GroupServiceImpl">
		<property name="groupDAO" ref="groupDAO"/>
	</bean>

	<bean id="dataLoader" class="mvc.bean.DataLoader" scope="request">
		<property name="contactService" ref="contactService"/>
		<property name="groupService" ref="groupService"/>
 	</bean>

	<bean id="dataManager" class="mvc.bean.DataManager" scope="request"/>

	<!-- Aspects -->
	<bean id="contactServiceLogger" class="logger.ContactServiceLogger"/>
	<aop:config>
		<aop:aspect id="contactServiceLoggerAspect" ref="contactServiceLogger">
			<aop:pointcut id="contactServiceLoggerPointcut"
						  expression="execution(* service.ContactServiceImpl.*(..))" />
			<aop:before pointcut-ref="contactServiceLoggerPointcut" method="log"/>
		</aop:aspect>
	</aop:config>

</beans>
